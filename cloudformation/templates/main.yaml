AWSTemplateFormatVersion: '2010-09-09'
Description: 'ECS Cluster with Fargate, RDS MySQL with Subnets, and IAM Role'

Parameters:
  DBPassword:
    Description: 'The database admin account password'
    Type: 'String'
    NoEcho: true

Resources:
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: 'Name'
          Value: 'MyVPC'
        - Key: 'Environment'
          Value: 'DEV'

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: 'Name'
          Value: 'MyInternetGateway'
        - Key: 'Environment'
          Value: 'DEV'

  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: 'Name'
          Value: 'PublicRouteTable'
        - Key: 'Environment'
          Value: 'DEV'

  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: InternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '10.0.1.0/24'
      MapPublicIpOnLaunch: true
      AvailabilityZone: 'eu-west-1a'
      Tags:
        - Key: 'Name'
          Value: 'PublicSubnet'
        - Key: 'Environment'
          Value: 'DEV'

  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '10.0.2.0/24'
      AvailabilityZone: 'eu-west-1a'
      Tags:
        - Key: 'Name'
          Value: 'PrivateSubnet1'
        - Key: 'Environment'
          Value: 'DEV'

  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '10.0.4.0/24'
      AvailabilityZone: 'eu-west-1b'
      Tags:
        - Key: 'Name'
          Value: 'PrivateSubnet2'
        - Key: 'Environment'
          Value: 'DEV'

  MyCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: 'MyECSCluster'
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: 'FARGATE'
          Weight: 1

  MyECRRepository:
    Type: 'AWS::ECR::Repository'
    Properties:
      RepositoryName: 'my-repo'

  MyDBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: 'My DB subnet group'
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2

  MyRDSInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceIdentifier: 'mydbinstance'
      AllocatedStorage: '20'
      DBInstanceClass: 'db.t3.micro'  
      Engine: 'mysql'
      MasterUsername: 'admin'
      MasterUserPassword: !Ref DBPassword
      DBName: 'mydatabase'
      DBSubnetGroupName: !Ref MyDBSubnetGroup
      VPCSecurityGroups:
        - !Ref MyDBSecurityGroup
      Tags:
        - Key: 'Name'
          Value: 'MyDBInstance'
        - Key: 'Environment'
          Value: 'DEV'

  MyDBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'RDS security group'
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: '0.0.0.0/0'

  MyTaskExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'ecs-tasks.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'ECRAccessPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:BatchGetImage'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:PutImage'
                  - 'ecr:InitiateLayerUpload'
                  - 'ecr:UploadLayerPart'
                  - 'ecr:CompleteLayerUpload'
                  - 'ecr:ListImages'
                  - 'ecr:GetAuthorizationToken'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'

Outputs:
  VPCId:
    Value: !Ref MyVPC
  PublicSubnetId:
    Value: !Ref PublicSubnet
  PrivateSubnet1Id:
    Value: !Ref PrivateSubnet1
  PrivateSubnet2Id:
    Value: !Ref PrivateSubnet2
  ECSClusterName:
    Value: !Ref MyCluster
  ECRRepositoryURI:
    Value: !GetAtt MyECRRepository.RepositoryUri
  TaskExecutionRoleArn:
    Value: !GetAtt MyTaskExecutionRole.Arn
  InternetGatewayId:
    Value: !Ref InternetGateway
  PublicRouteTableId:
    Value: !Ref PublicRouteTable
